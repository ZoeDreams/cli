// TODO rename this tsconfig.json file to something other than tsconfig.json
// (and update all consuming projects) so that VS Code doesn't attempt to use it
// as the local configuration when working in this project.
{
	"TODOs": "re-enable noImplicitAny",
	"compilerOptions": {
		"allowJs": true,
		"checkJs": false,
		// The allowSyntheticDefaultImports option needs to be set to true for
		// TypeScript code to be compatible with Node.js ES Modules, which
		// expect ES Modules to `import` the `module.exports` of a CommonJS
		// module as the `default` import. F.e. This means CommonJS modules must
		// be imported as `import foo from 'commonjs-module'` instead of `import
		// * as foo from 'commonjs-module'`.
		"allowSyntheticDefaultImports": true,
		"esModuleInterop": false,
		"alwaysStrict": true,
		"strict": true,
		"declaration": true,
		"emitDecoratorMetadata": true,
		"noEmitOnError": false,
		"experimentalDecorators": true,
		"forceConsistentCasingInFileNames": true,
		"jsx": "react",
		"lib": ["es2018", "dom"],
		"target": "es2018",
		"module": "esnext",
		"moduleResolution": "node",
		"noFallthroughCasesInSwitch": true,
		"noImplicitReturns": false,
		"noImplicitAny": true,
		"noImplicitThis": true,
		"noUnusedLocals": true,
		"noUnusedParameters": true,
		"preserveConstEnums": true,
		"pretty": true,
		"sourceMap": true,
		"skipLibCheck": false,
		"paths": {
			"*": ["*"]
		},
		"rootDir": "../../../src",
		"baseUrl": "../../../",
		"outDir": "../../../dist",
		"typeRoots": ["../../../node_modules/@types", "../../../node_modules/builder-js-package/node_modules/@types"]
	},
	"compileOnSave": false,
	"include": ["../../../src/**/*"]
}
